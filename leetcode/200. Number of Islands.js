function visitNeighbors(i, j, grid, queue, visited) {
  visited[i][j] = true;
  visited[i + 1] = visited[i + 1] || [];
  visited[i - 1] = visited[i - 1] || [];

  if (grid[i][j + 1] === '1' && !visited[i][j + 1]) {
    queue.push([i, j + 1]);
  }

  if (grid[i][j - 1] === '1' && !visited[i][j - 1]) {
    queue.push([i, j - 1]);
  }

  if (grid[i - 1] && grid[i - 1][j] === '1' && !visited[i - 1][j]) {
    queue.push([i - 1, j]);
  }

  if (grid[i + 1] && grid[i + 1][j] === '1' && !visited[i + 1][j]) {
    queue.push([i + 1, j]);
  }

  while (queue.length) {
    const [i, j] = queue.shift();

    if (!visited[i][j]) {
      visitNeighbors(i, j, grid, queue, visited);
    }
  }
}

var numIslands = function (grid) {
  console.log(grid.length * grid[0].length);
  let count = 0;
  const visited = [];
  const queue = [];

  for (let i = 0; i < grid.length; i++) {
    for (let j = 0; j < grid[0].length; j++) {
      visited[i] = visited[i] || [];

      if (grid[i][j] === '1' && !visited[i][j]) {
        visitNeighbors(i, j, grid, queue, visited);
        count++;
      } else if (grid[i][j] === '0') {
        visited[i][j] = true;
      }
    }
  }

  return count;
};

// console.log(
//   numIslands([
//     ['1', '1', '1', '1', '0'],
//     ['1', '1', '0', '1', '0'],
//     ['1', '1', '0', '0', '0'],
//     ['0', '0', '0', '0', '0'],
//   ])
// ); // 1

// console.log(
//   numIslands([
//     ['1', '1', '0', '0', '0'],
//     ['1', '1', '0', '0', '0'],
//     ['0', '0', '1', '0', '0'],
//     ['0', '0', '0', '1', '1'],
//   ])
// ); // 3

// console.log(
//   numIslands([
//     ['0', '1', '0'],
//     ['1', '0', '1'],
//     ['0', '1', '0'],
//   ])
// ); // 3

console.log(
  numIslands([
    ['1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '0', '1', '1'],
    ['0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '0'],
    ['1', '0', '1', '1', '1', '0', '0', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'],
    ['1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'],
    ['1', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'],
    ['1', '0', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', '1', '1'],
    ['0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '0', '1', '1', '1', '1'],
    ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '0', '1', '1'],
    ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1'],
    ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'],
    ['0', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'],
    ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'],
    ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'],
    ['1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1'],
    ['1', '0', '1', '1', '1', '1', '1', '0', '1', '1', '1', '0', '1', '1', '1', '1', '0', '1', '1', '1'],
    ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '0'],
    ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '0', '0'],
    ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'],
    ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'],
    ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'],
  ])
); // 3
